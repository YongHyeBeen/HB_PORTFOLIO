#!/usr/bin/python3
# 파일명 : vul_check_U_01.py
# 취약코드 : U-01 (상)
# 점검항목 : root 계정 원격 접속 제한
# 점검내용 : 시스템 정책에 root 계정의 원격터미널 접속차단 설정이 적용되어 있는지 점검
# 양호기준 : 원격 터미널 서비스를 사용하지 않거나, 사용 시 root 직접 접속을 차단한 경우
# 취약기준 : 원격 터미널 서비스 사용 시 root 직접 접속을 허용한 경우


import os.path  
import re
good = "\033[94m양호\033[0m"  # 양호
bad = "\033[91m취약\033[0m"   # 취약

def is_vulner_telnet():
    global good
    global bad
    
    file1 = '/etc/pam.d/login'
    file2 = '/etc/securetty'

    pat1 = re.compile(r"^auth[ ]+(.+?[ ]+)+\bpam_securetty[.]so", re.MULTILINE)
    pat2 = re.compile(r"^pts[/][0-9]+$", re.MULTILINE)

    file = open(file1, 'r')
    read = file.read()
    file.close()

    match = pat1.search(read)
    if match:   result1 = False # 취약하지 않음
    else:       result1 = True
        
    if not os.path.isfile(file2): result2, result3 = True, [] 
    else:                    
        result2 = False
        file = open(file2, 'r')
        read = file.read()
        file.close()   
        result3 = pat2.findall(read)
    return [result1, result2, result3]

def is_vulner_ssh(): # SSH 서비스 사용시 /etc/ssh/sshd_config => PermitRootLogin No
    file1 = "/etc/ssh/sshd_config"
    pat = re.compile(r"^PermitRootLogin[ \t]+(?P<opt>[A-z\-]+)", re.MULTILINE|re.IGNORECASE)
  
    file = open(file1, 'r')
    read = file.read()
    file.close()
    
    match = pat.search(read)
    if not match:
        result = True
        opt = 'yes'
    else:
        opt = match.group('opt').lower()
        if opt == 'yes':
            result = True
        else:
            result = False
    return [result, opt]        # True이면 취약한 상태
            
    
result1, result2, result3 = is_vulner_telnet()

# result 1, 2, 3이 True가 나오면 취약한 상태
if result1 or result2 or result3:       # any(result1, result2, result3)함수도 사용 가능
    print(f"{bad} - Telnet 서비스 root 로그인이 가능함")
    if result1: print("       ※ pam_securetty.so 모듈이 미사용중")
    if result2: print("       ※ /etc/securetty 파일이 없음")
    else: 
        if result3: 
            print(f"       ※ 원격터미널 목록 확인 : {result3}")
else:
    print(f"{good} - Telnet 서비스 root 로그인이 불가능함")
    
    
result, opt = is_vulner_ssh()

if result:
    print(f"{bad} - SSH 서비스, root 로그인 암호인증 가능함")
    print(f"       옵션 : {opt}")
else:
        print(f"{good} - SSH 서비스, root 로그인 암호인증 불가능함")
        print(f"       옵션 : {opt}")
